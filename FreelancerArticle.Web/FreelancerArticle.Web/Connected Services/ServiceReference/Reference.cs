//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreelancerArticle.Web.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Freelancer", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Freelancer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string C__КошелькаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Feedback[] FeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Order[] OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Reviews[] ReviewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Wallets WalletsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ИмяField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ЛогинField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ОтчествоField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ПарольField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ФамилияField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C__Кошелька {
            get {
                return this.C__КошелькаField;
            }
            set {
                if ((object.ReferenceEquals(this.C__КошелькаField, value) != true)) {
                    this.C__КошелькаField = value;
                    this.RaisePropertyChanged("C__Кошелька");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Feedback[] Feedback {
            get {
                return this.FeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackField, value) != true)) {
                    this.FeedbackField = value;
                    this.RaisePropertyChanged("Feedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Order[] Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Reviews[] Reviews {
            get {
                return this.ReviewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewsField, value) != true)) {
                    this.ReviewsField = value;
                    this.RaisePropertyChanged("Reviews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Wallets Wallets {
            get {
                return this.WalletsField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletsField, value) != true)) {
                    this.WalletsField = value;
                    this.RaisePropertyChanged("Wallets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Имя {
            get {
                return this.ИмяField;
            }
            set {
                if ((object.ReferenceEquals(this.ИмяField, value) != true)) {
                    this.ИмяField = value;
                    this.RaisePropertyChanged("Имя");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Логин {
            get {
                return this.ЛогинField;
            }
            set {
                if ((object.ReferenceEquals(this.ЛогинField, value) != true)) {
                    this.ЛогинField = value;
                    this.RaisePropertyChanged("Логин");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Отчество {
            get {
                return this.ОтчествоField;
            }
            set {
                if ((object.ReferenceEquals(this.ОтчествоField, value) != true)) {
                    this.ОтчествоField = value;
                    this.RaisePropertyChanged("Отчество");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Пароль {
            get {
                return this.ПарольField;
            }
            set {
                if ((object.ReferenceEquals(this.ПарольField, value) != true)) {
                    this.ПарольField = value;
                    this.RaisePropertyChanged("Пароль");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Фамилия {
            get {
                return this.ФамилияField;
            }
            set {
                if ((object.ReferenceEquals(this.ФамилияField, value) != true)) {
                    this.ФамилияField = value;
                    this.RaisePropertyChanged("Фамилия");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wallets", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Wallets : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string C__КошелькаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Customer[] CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Freelancer[] FreelancerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> СуммаField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C__Кошелька {
            get {
                return this.C__КошелькаField;
            }
            set {
                if ((object.ReferenceEquals(this.C__КошелькаField, value) != true)) {
                    this.C__КошелькаField = value;
                    this.RaisePropertyChanged("C__Кошелька");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Customer[] Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Freelancer[] Freelancer {
            get {
                return this.FreelancerField;
            }
            set {
                if ((object.ReferenceEquals(this.FreelancerField, value) != true)) {
                    this.FreelancerField = value;
                    this.RaisePropertyChanged("Freelancer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Сумма {
            get {
                return this.СуммаField;
            }
            set {
                if ((this.СуммаField.Equals(value) != true)) {
                    this.СуммаField = value;
                    this.RaisePropertyChanged("Сумма");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feedback", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Feedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> C__ЗаказаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C__ОткликаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Freelancer FreelancerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Order OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ФрилансерField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> C__Заказа {
            get {
                return this.C__ЗаказаField;
            }
            set {
                if ((this.C__ЗаказаField.Equals(value) != true)) {
                    this.C__ЗаказаField = value;
                    this.RaisePropertyChanged("C__Заказа");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C__Отклика {
            get {
                return this.C__ОткликаField;
            }
            set {
                if ((this.C__ОткликаField.Equals(value) != true)) {
                    this.C__ОткликаField = value;
                    this.RaisePropertyChanged("C__Отклика");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Freelancer Freelancer {
            get {
                return this.FreelancerField;
            }
            set {
                if ((object.ReferenceEquals(this.FreelancerField, value) != true)) {
                    this.FreelancerField = value;
                    this.RaisePropertyChanged("Freelancer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Фрилансер {
            get {
                return this.ФрилансерField;
            }
            set {
                if ((object.ReferenceEquals(this.ФрилансерField, value) != true)) {
                    this.ФрилансерField = value;
                    this.RaisePropertyChanged("Фрилансер");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C__ЗаказаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Feedback[] FeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Freelancer FreelancerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal БюджетField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ЗаказчикField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Количество_символовField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string НазваниеField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Назначенный_фрилансерField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Подробное_описаниеField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string СостояниеField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ТемаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ФайлField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C__Заказа {
            get {
                return this.C__ЗаказаField;
            }
            set {
                if ((this.C__ЗаказаField.Equals(value) != true)) {
                    this.C__ЗаказаField = value;
                    this.RaisePropertyChanged("C__Заказа");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Feedback[] Feedback {
            get {
                return this.FeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackField, value) != true)) {
                    this.FeedbackField = value;
                    this.RaisePropertyChanged("Feedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Freelancer Freelancer {
            get {
                return this.FreelancerField;
            }
            set {
                if ((object.ReferenceEquals(this.FreelancerField, value) != true)) {
                    this.FreelancerField = value;
                    this.RaisePropertyChanged("Freelancer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Бюджет {
            get {
                return this.БюджетField;
            }
            set {
                if ((this.БюджетField.Equals(value) != true)) {
                    this.БюджетField = value;
                    this.RaisePropertyChanged("Бюджет");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Заказчик {
            get {
                return this.ЗаказчикField;
            }
            set {
                if ((object.ReferenceEquals(this.ЗаказчикField, value) != true)) {
                    this.ЗаказчикField = value;
                    this.RaisePropertyChanged("Заказчик");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Количество_символов {
            get {
                return this.Количество_символовField;
            }
            set {
                if ((this.Количество_символовField.Equals(value) != true)) {
                    this.Количество_символовField = value;
                    this.RaisePropertyChanged("Количество_символов");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Название {
            get {
                return this.НазваниеField;
            }
            set {
                if ((object.ReferenceEquals(this.НазваниеField, value) != true)) {
                    this.НазваниеField = value;
                    this.RaisePropertyChanged("Название");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Назначенный_фрилансер {
            get {
                return this.Назначенный_фрилансерField;
            }
            set {
                if ((object.ReferenceEquals(this.Назначенный_фрилансерField, value) != true)) {
                    this.Назначенный_фрилансерField = value;
                    this.RaisePropertyChanged("Назначенный_фрилансер");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Подробное_описание {
            get {
                return this.Подробное_описаниеField;
            }
            set {
                if ((object.ReferenceEquals(this.Подробное_описаниеField, value) != true)) {
                    this.Подробное_описаниеField = value;
                    this.RaisePropertyChanged("Подробное_описание");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Состояние {
            get {
                return this.СостояниеField;
            }
            set {
                if ((object.ReferenceEquals(this.СостояниеField, value) != true)) {
                    this.СостояниеField = value;
                    this.RaisePropertyChanged("Состояние");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Тема {
            get {
                return this.ТемаField;
            }
            set {
                if ((object.ReferenceEquals(this.ТемаField, value) != true)) {
                    this.ТемаField = value;
                    this.RaisePropertyChanged("Тема");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Файл {
            get {
                return this.ФайлField;
            }
            set {
                if ((object.ReferenceEquals(this.ФайлField, value) != true)) {
                    this.ФайлField = value;
                    this.RaisePropertyChanged("Файл");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reviews", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Reviews : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C__ОтзываField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Freelancer FreelancerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string КомментарийField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ФрилансерField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C__Отзыва {
            get {
                return this.C__ОтзываField;
            }
            set {
                if ((this.C__ОтзываField.Equals(value) != true)) {
                    this.C__ОтзываField = value;
                    this.RaisePropertyChanged("C__Отзыва");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Freelancer Freelancer {
            get {
                return this.FreelancerField;
            }
            set {
                if ((object.ReferenceEquals(this.FreelancerField, value) != true)) {
                    this.FreelancerField = value;
                    this.RaisePropertyChanged("Freelancer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Комментарий {
            get {
                return this.КомментарийField;
            }
            set {
                if ((object.ReferenceEquals(this.КомментарийField, value) != true)) {
                    this.КомментарийField = value;
                    this.RaisePropertyChanged("Комментарий");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Фрилансер {
            get {
                return this.ФрилансерField;
            }
            set {
                if ((object.ReferenceEquals(this.ФрилансерField, value) != true)) {
                    this.ФрилансерField = value;
                    this.RaisePropertyChanged("Фрилансер");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string C__КошелькаField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Order[] OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FreelancerArticle.Web.ServiceReference.Wallets WalletsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ИмяField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ЛогинField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ОтчествоField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ПарольField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ФамилияField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C__Кошелька {
            get {
                return this.C__КошелькаField;
            }
            set {
                if ((object.ReferenceEquals(this.C__КошелькаField, value) != true)) {
                    this.C__КошелькаField = value;
                    this.RaisePropertyChanged("C__Кошелька");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Order[] Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FreelancerArticle.Web.ServiceReference.Wallets Wallets {
            get {
                return this.WalletsField;
            }
            set {
                if ((object.ReferenceEquals(this.WalletsField, value) != true)) {
                    this.WalletsField = value;
                    this.RaisePropertyChanged("Wallets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Имя {
            get {
                return this.ИмяField;
            }
            set {
                if ((object.ReferenceEquals(this.ИмяField, value) != true)) {
                    this.ИмяField = value;
                    this.RaisePropertyChanged("Имя");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Логин {
            get {
                return this.ЛогинField;
            }
            set {
                if ((object.ReferenceEquals(this.ЛогинField, value) != true)) {
                    this.ЛогинField = value;
                    this.RaisePropertyChanged("Логин");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Отчество {
            get {
                return this.ОтчествоField;
            }
            set {
                if ((object.ReferenceEquals(this.ОтчествоField, value) != true)) {
                    this.ОтчествоField = value;
                    this.RaisePropertyChanged("Отчество");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Пароль {
            get {
                return this.ПарольField;
            }
            set {
                if ((object.ReferenceEquals(this.ПарольField, value) != true)) {
                    this.ПарольField = value;
                    this.RaisePropertyChanged("Пароль");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Фамилия {
            get {
                return this.ФамилияField;
            }
            set {
                if ((object.ReferenceEquals(this.ФамилияField, value) != true)) {
                    this.ФамилияField = value;
                    this.RaisePropertyChanged("Фамилия");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Messenger", Namespace="http://schemas.datacontract.org/2004/07/FreelancerArticle.Server")]
    [System.SerializableAttribute()]
    public partial class Messenger : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int C__МессенджераField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ВремяField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Логин_пользователяField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string СообщениеField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int C__Мессенджера {
            get {
                return this.C__МессенджераField;
            }
            set {
                if ((this.C__МессенджераField.Equals(value) != true)) {
                    this.C__МессенджераField = value;
                    this.RaisePropertyChanged("C__Мессенджера");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Время {
            get {
                return this.ВремяField;
            }
            set {
                if ((this.ВремяField.Equals(value) != true)) {
                    this.ВремяField = value;
                    this.RaisePropertyChanged("Время");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Логин_пользователя {
            get {
                return this.Логин_пользователяField;
            }
            set {
                if ((object.ReferenceEquals(this.Логин_пользователяField, value) != true)) {
                    this.Логин_пользователяField = value;
                    this.RaisePropertyChanged("Логин_пользователя");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Сообщение {
            get {
                return this.СообщениеField;
            }
            set {
                if ((object.ReferenceEquals(this.СообщениеField, value) != true)) {
                    this.СообщениеField = value;
                    this.RaisePropertyChanged("Сообщение");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        bool AddUser(string affiliation, string login, string password, string name, string lastName, string patronymic, string numberWallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(string affiliation, string login, string password, string name, string lastName, string patronymic, string numberWallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserLogin", ReplyAction="http://tempuri.org/IUserService/CheckUserLoginResponse")]
        bool CheckUserLogin(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUserLogin", ReplyAction="http://tempuri.org/IUserService/CheckUserLoginResponse")]
        System.Threading.Tasks.Task<bool> CheckUserLoginAsync(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoleUser", ReplyAction="http://tempuri.org/IUserService/GetRoleUserResponse")]
        string GetRoleUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRoleUser", ReplyAction="http://tempuri.org/IUserService/GetRoleUserResponse")]
        System.Threading.Tasks.Task<string> GetRoleUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUser", ReplyAction="http://tempuri.org/IUserService/CheckUserResponse")]
        bool CheckUser(string affiliation, string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CheckUser", ReplyAction="http://tempuri.org/IUserService/CheckUserResponse")]
        System.Threading.Tasks.Task<bool> CheckUserAsync(string affiliation, string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListFreelancers", ReplyAction="http://tempuri.org/IUserService/GetListFreelancersResponse")]
        FreelancerArticle.Web.ServiceReference.Freelancer[] GetListFreelancers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListFreelancers", ReplyAction="http://tempuri.org/IUserService/GetListFreelancersResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Freelancer[]> GetListFreelancersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListCustomers", ReplyAction="http://tempuri.org/IUserService/GetListCustomersResponse")]
        FreelancerArticle.Web.ServiceReference.Customer[] GetListCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetListCustomers", ReplyAction="http://tempuri.org/IUserService/GetListCustomersResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Customer[]> GetListCustomersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : FreelancerArticle.Web.ServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<FreelancerArticle.Web.ServiceReference.IUserService>, FreelancerArticle.Web.ServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddUser(string affiliation, string login, string password, string name, string lastName, string patronymic, string numberWallet) {
            return base.Channel.AddUser(affiliation, login, password, name, lastName, patronymic, numberWallet);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(string affiliation, string login, string password, string name, string lastName, string patronymic, string numberWallet) {
            return base.Channel.AddUserAsync(affiliation, login, password, name, lastName, patronymic, numberWallet);
        }
        
        public bool CheckUserLogin(string Login) {
            return base.Channel.CheckUserLogin(Login);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserLoginAsync(string Login) {
            return base.Channel.CheckUserLoginAsync(Login);
        }
        
        public string GetRoleUser(string login) {
            return base.Channel.GetRoleUser(login);
        }
        
        public System.Threading.Tasks.Task<string> GetRoleUserAsync(string login) {
            return base.Channel.GetRoleUserAsync(login);
        }
        
        public bool CheckUser(string affiliation, string Login, string Password) {
            return base.Channel.CheckUser(affiliation, Login, Password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserAsync(string affiliation, string Login, string Password) {
            return base.Channel.CheckUserAsync(affiliation, Login, Password);
        }
        
        public FreelancerArticle.Web.ServiceReference.Freelancer[] GetListFreelancers() {
            return base.Channel.GetListFreelancers();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Freelancer[]> GetListFreelancersAsync() {
            return base.Channel.GetListFreelancersAsync();
        }
        
        public FreelancerArticle.Web.ServiceReference.Customer[] GetListCustomers() {
            return base.Channel.GetListCustomers();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Customer[]> GetListCustomersAsync() {
            return base.Channel.GetListCustomersAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IFeedbackService")]
    public interface IFeedbackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/AddFeedback", ReplyAction="http://tempuri.org/IFeedbackService/AddFeedbackResponse")]
        bool AddFeedback(string freelancer, int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/AddFeedback", ReplyAction="http://tempuri.org/IFeedbackService/AddFeedbackResponse")]
        System.Threading.Tasks.Task<bool> AddFeedbackAsync(string freelancer, int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetListFeedbacks", ReplyAction="http://tempuri.org/IFeedbackService/GetListFeedbacksResponse")]
        FreelancerArticle.Web.ServiceReference.Feedback[] GetListFeedbacks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/GetListFeedbacks", ReplyAction="http://tempuri.org/IFeedbackService/GetListFeedbacksResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Feedback[]> GetListFeedbacksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/DeleteAllFeedback", ReplyAction="http://tempuri.org/IFeedbackService/DeleteAllFeedbackResponse")]
        bool DeleteAllFeedback(int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeedbackService/DeleteAllFeedback", ReplyAction="http://tempuri.org/IFeedbackService/DeleteAllFeedbackResponse")]
        System.Threading.Tasks.Task<bool> DeleteAllFeedbackAsync(int numberOrder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeedbackServiceChannel : FreelancerArticle.Web.ServiceReference.IFeedbackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeedbackServiceClient : System.ServiceModel.ClientBase<FreelancerArticle.Web.ServiceReference.IFeedbackService>, FreelancerArticle.Web.ServiceReference.IFeedbackService {
        
        public FeedbackServiceClient() {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeedbackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddFeedback(string freelancer, int numberOrder) {
            return base.Channel.AddFeedback(freelancer, numberOrder);
        }
        
        public System.Threading.Tasks.Task<bool> AddFeedbackAsync(string freelancer, int numberOrder) {
            return base.Channel.AddFeedbackAsync(freelancer, numberOrder);
        }
        
        public FreelancerArticle.Web.ServiceReference.Feedback[] GetListFeedbacks() {
            return base.Channel.GetListFeedbacks();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Feedback[]> GetListFeedbacksAsync() {
            return base.Channel.GetListFeedbacksAsync();
        }
        
        public bool DeleteAllFeedback(int numberOrder) {
            return base.Channel.DeleteAllFeedback(numberOrder);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAllFeedbackAsync(int numberOrder) {
            return base.Channel.DeleteAllFeedbackAsync(numberOrder);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMessengerService")]
    public interface IMessengerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/AddMessage", ReplyAction="http://tempuri.org/IMessengerService/AddMessageResponse")]
        bool AddMessage(string loginUser, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/AddMessage", ReplyAction="http://tempuri.org/IMessengerService/AddMessageResponse")]
        System.Threading.Tasks.Task<bool> AddMessageAsync(string loginUser, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetListMessages", ReplyAction="http://tempuri.org/IMessengerService/GetListMessagesResponse")]
        FreelancerArticle.Web.ServiceReference.Messenger[] GetListMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessengerService/GetListMessages", ReplyAction="http://tempuri.org/IMessengerService/GetListMessagesResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Messenger[]> GetListMessagesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessengerServiceChannel : FreelancerArticle.Web.ServiceReference.IMessengerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessengerServiceClient : System.ServiceModel.ClientBase<FreelancerArticle.Web.ServiceReference.IMessengerService>, FreelancerArticle.Web.ServiceReference.IMessengerService {
        
        public MessengerServiceClient() {
        }
        
        public MessengerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessengerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddMessage(string loginUser, string message) {
            return base.Channel.AddMessage(loginUser, message);
        }
        
        public System.Threading.Tasks.Task<bool> AddMessageAsync(string loginUser, string message) {
            return base.Channel.AddMessageAsync(loginUser, message);
        }
        
        public FreelancerArticle.Web.ServiceReference.Messenger[] GetListMessages() {
            return base.Channel.GetListMessages();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Messenger[]> GetListMessagesAsync() {
            return base.Channel.GetListMessagesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        bool AddOrder(string loginCustomer, string topic, string title, string description, int countSymbol, decimal money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<bool> AddOrderAsync(string loginCustomer, string topic, string title, string description, int countSymbol, decimal money);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        bool DeleteOrder(int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/DeleteOrder", ReplyAction="http://tempuri.org/IOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<bool> DeleteOrderAsync(int numberOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateStatus", ReplyAction="http://tempuri.org/IOrderService/UpdateStatusResponse")]
        bool UpdateStatus(int numberOrder, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/UpdateStatus", ReplyAction="http://tempuri.org/IOrderService/UpdateStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateStatusAsync(int numberOrder, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetListOrders", ReplyAction="http://tempuri.org/IOrderService/GetListOrdersResponse")]
        FreelancerArticle.Web.ServiceReference.Order[] GetListOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetListOrders", ReplyAction="http://tempuri.org/IOrderService/GetListOrdersResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Order[]> GetListOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SendFile", ReplyAction="http://tempuri.org/IOrderService/SendFileResponse")]
        bool SendFile(int numberOrder, string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SendFile", ReplyAction="http://tempuri.org/IOrderService/SendFileResponse")]
        System.Threading.Tasks.Task<bool> SendFileAsync(int numberOrder, string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AssignFreelancer", ReplyAction="http://tempuri.org/IOrderService/AssignFreelancerResponse")]
        bool AssignFreelancer(int numberOrder, string assignedFreelancer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AssignFreelancer", ReplyAction="http://tempuri.org/IOrderService/AssignFreelancerResponse")]
        System.Threading.Tasks.Task<bool> AssignFreelancerAsync(int numberOrder, string assignedFreelancer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : FreelancerArticle.Web.ServiceReference.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<FreelancerArticle.Web.ServiceReference.IOrderService>, FreelancerArticle.Web.ServiceReference.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddOrder(string loginCustomer, string topic, string title, string description, int countSymbol, decimal money) {
            return base.Channel.AddOrder(loginCustomer, topic, title, description, countSymbol, money);
        }
        
        public System.Threading.Tasks.Task<bool> AddOrderAsync(string loginCustomer, string topic, string title, string description, int countSymbol, decimal money) {
            return base.Channel.AddOrderAsync(loginCustomer, topic, title, description, countSymbol, money);
        }
        
        public bool DeleteOrder(int numberOrder) {
            return base.Channel.DeleteOrder(numberOrder);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteOrderAsync(int numberOrder) {
            return base.Channel.DeleteOrderAsync(numberOrder);
        }
        
        public bool UpdateStatus(int numberOrder, string status) {
            return base.Channel.UpdateStatus(numberOrder, status);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStatusAsync(int numberOrder, string status) {
            return base.Channel.UpdateStatusAsync(numberOrder, status);
        }
        
        public FreelancerArticle.Web.ServiceReference.Order[] GetListOrders() {
            return base.Channel.GetListOrders();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Order[]> GetListOrdersAsync() {
            return base.Channel.GetListOrdersAsync();
        }
        
        public bool SendFile(int numberOrder, string file) {
            return base.Channel.SendFile(numberOrder, file);
        }
        
        public System.Threading.Tasks.Task<bool> SendFileAsync(int numberOrder, string file) {
            return base.Channel.SendFileAsync(numberOrder, file);
        }
        
        public bool AssignFreelancer(int numberOrder, string assignedFreelancer) {
            return base.Channel.AssignFreelancer(numberOrder, assignedFreelancer);
        }
        
        public System.Threading.Tasks.Task<bool> AssignFreelancerAsync(int numberOrder, string assignedFreelancer) {
            return base.Channel.AssignFreelancerAsync(numberOrder, assignedFreelancer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IReviewService")]
    public interface IReviewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddComment", ReplyAction="http://tempuri.org/IReviewService/AddCommentResponse")]
        bool AddComment(string freelancer, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddComment", ReplyAction="http://tempuri.org/IReviewService/AddCommentResponse")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(string freelancer, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetListReviews", ReplyAction="http://tempuri.org/IReviewService/GetListReviewsResponse")]
        FreelancerArticle.Web.ServiceReference.Reviews[] GetListReviews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetListReviews", ReplyAction="http://tempuri.org/IReviewService/GetListReviewsResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Reviews[]> GetListReviewsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReviewServiceChannel : FreelancerArticle.Web.ServiceReference.IReviewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReviewServiceClient : System.ServiceModel.ClientBase<FreelancerArticle.Web.ServiceReference.IReviewService>, FreelancerArticle.Web.ServiceReference.IReviewService {
        
        public ReviewServiceClient() {
        }
        
        public ReviewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReviewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReviewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReviewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddComment(string freelancer, string comment) {
            return base.Channel.AddComment(freelancer, comment);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(string freelancer, string comment) {
            return base.Channel.AddCommentAsync(freelancer, comment);
        }
        
        public FreelancerArticle.Web.ServiceReference.Reviews[] GetListReviews() {
            return base.Channel.GetListReviews();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Reviews[]> GetListReviewsAsync() {
            return base.Channel.GetListReviewsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IWalletService")]
    public interface IWalletService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/AddWallet", ReplyAction="http://tempuri.org/IWalletService/AddWalletResponse")]
        bool AddWallet(string wallet, decimal sum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/AddWallet", ReplyAction="http://tempuri.org/IWalletService/AddWalletResponse")]
        System.Threading.Tasks.Task<bool> AddWalletAsync(string wallet, decimal sum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/UpdateMoneyInWallet", ReplyAction="http://tempuri.org/IWalletService/UpdateMoneyInWalletResponse")]
        bool UpdateMoneyInWallet(string wallet, decimal sum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/UpdateMoneyInWallet", ReplyAction="http://tempuri.org/IWalletService/UpdateMoneyInWalletResponse")]
        System.Threading.Tasks.Task<bool> UpdateMoneyInWalletAsync(string wallet, decimal sum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/GetListWallets", ReplyAction="http://tempuri.org/IWalletService/GetListWalletsResponse")]
        FreelancerArticle.Web.ServiceReference.Wallets[] GetListWallets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletService/GetListWallets", ReplyAction="http://tempuri.org/IWalletService/GetListWalletsResponse")]
        System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Wallets[]> GetListWalletsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWalletServiceChannel : FreelancerArticle.Web.ServiceReference.IWalletService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WalletServiceClient : System.ServiceModel.ClientBase<FreelancerArticle.Web.ServiceReference.IWalletService>, FreelancerArticle.Web.ServiceReference.IWalletService {
        
        public WalletServiceClient() {
        }
        
        public WalletServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WalletServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WalletServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WalletServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddWallet(string wallet, decimal sum) {
            return base.Channel.AddWallet(wallet, sum);
        }
        
        public System.Threading.Tasks.Task<bool> AddWalletAsync(string wallet, decimal sum) {
            return base.Channel.AddWalletAsync(wallet, sum);
        }
        
        public bool UpdateMoneyInWallet(string wallet, decimal sum) {
            return base.Channel.UpdateMoneyInWallet(wallet, sum);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMoneyInWalletAsync(string wallet, decimal sum) {
            return base.Channel.UpdateMoneyInWalletAsync(wallet, sum);
        }
        
        public FreelancerArticle.Web.ServiceReference.Wallets[] GetListWallets() {
            return base.Channel.GetListWallets();
        }
        
        public System.Threading.Tasks.Task<FreelancerArticle.Web.ServiceReference.Wallets[]> GetListWalletsAsync() {
            return base.Channel.GetListWalletsAsync();
        }
    }
}
